{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singh\\\\Desktop\\\\sid\\\\REACT_MAX\\\\starting-project\\\\01-starting-project\\\\src\\\\components\\\\Users\\\\AddUser.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport classes from \"./AddUser.module.css\";\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredAge, setEnteredAge] = useState(\"\");\n  const [error, setError] = useState();\n\n  const addUserHandler = e => {\n    e.preventDefault();\n\n    if (enteredName.trim().length === 0 || enteredAge.trim().length < 0) {\n      setError({\n        title: 'Error occured',\n        message: 'Please enter a valid name and age !!!'\n      });\n      return;\n    }\n\n    if (+enteredAge < 1) {\n      setError({\n        title: 'Error occured',\n        message: 'Please enter a valid age i.e greater than 0 !!'\n      });\n      return;\n    } // console.log(enteredAge, enteredName);\n\n\n    props.onAddUser(enteredName, enteredAge);\n    setEnteredName(\"\");\n    setEnteredAge(\"\"); //still this will not get executed as return in if will finish the function\n  };\n\n  const inputChangedHandler = e => {\n    setEnteredName(e.target.value);\n  };\n\n  const ageChangedHandler = e => {\n    setEnteredAge(e.target.value);\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"UserName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"UserName\",\n          onChange: inputChangedHandler,\n          value: enteredName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \"Age in years\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"Age\",\n          onChange: ageChangedHandler,\n          value: enteredAge\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddUser, \"xQMrJgKbmTs0Xp/uxSR24Ixs47k=\");\n\n_c = AddUser;\nexport default AddUser; // for two way binding , firstly simply update the values with a function i.e setemteredname , but here we\n// are not reflecting that value back , so use the value atr in input and set its value to the new updated variable\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["C:/Users/singh/Desktop/sid/REACT_MAX/starting-project/01-starting-project/src/components/Users/AddUser.js"],"names":["useState","Card","classes","Button","ErrorModal","AddUser","props","enteredName","setEnteredName","enteredAge","setEnteredAge","error","setError","addUserHandler","e","preventDefault","trim","length","title","message","onAddUser","inputChangedHandler","target","value","ageChangedHandler","errorHandler","input"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport classes from \"./AddUser.module.css\";\r\nimport Button from \"../UI/Button\";\r\nimport ErrorModal from \"../UI/ErrorModal\";\r\nconst AddUser = (props) => {\r\n  const [enteredName, setEnteredName] = useState(\"\");\r\n  const [enteredAge, setEnteredAge] = useState(\"\");\r\n  const [error , setError] =  useState();\r\n  const addUserHandler = (e) => {\r\n    e.preventDefault();\r\n    if (enteredName.trim().length === 0 || enteredAge.trim().length < 0) {\r\n      setError({\r\n        title :   'Error occured' ,\r\n        message : 'Please enter a valid name and age !!!'\r\n      });\r\n      return;\r\n    }\r\n    if (+enteredAge < 1) {\r\n      setError({\r\n        title :   'Error occured' ,\r\n        message : 'Please enter a valid age i.e greater than 0 !!'\r\n      });\r\n      return;\r\n    }\r\n    // console.log(enteredAge, enteredName);\r\n    props.onAddUser(enteredName, enteredAge);\r\n    setEnteredName(\"\");\r\n    setEnteredAge(\"\"); //still this will not get executed as return in if will finish the function\r\n  };\r\n\r\n  const inputChangedHandler = (e) => {\r\n    setEnteredName(e.target.value);\r\n  };\r\n\r\n  const ageChangedHandler = (e) => {\r\n    setEnteredAge(e.target.value);\r\n  };\r\n  const errorHandler = () => {\r\n    setError(null);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {error && <ErrorModal title={error.title} message={error.message} />}\r\n      <Card className={classes.input}>\r\n        <form onSubmit={addUserHandler}>\r\n          <label htmlFor=\"username\">UserName</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"UserName\"\r\n            onChange={inputChangedHandler}\r\n            value={enteredName}\r\n          ></input>\r\n          <label htmlFor=\"age\">Age in years</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"Age\"\r\n            onChange={ageChangedHandler}\r\n            value={enteredAge}\r\n          ></input>\r\n          {/* <button type=\"submit\"> Add User</button> */}\r\n          <Button type=\"submit\">Add user</Button>\r\n        </form>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default AddUser;\r\n\r\n// for two way binding , firstly simply update the values with a function i.e setemteredname , but here we\r\n// are not reflecting that value back , so use the value atr in input and set its value to the new updated variable\r\n"]},"metadata":{},"sourceType":"module"}