{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singh\\\\Desktop\\\\sid\\\\REACT_MAX\\\\starting-project\\\\01-starting-project\\\\src\\\\components\\\\Users\\\\AddUser.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport classes from './AddUser.module.css';\nimport Button from '../UI/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredAge, setEnteredAge] = useState('');\n\n  const addUserHandler = e => {\n    e.preventDefault();\n\n    if (enteredName.trim().length === 0 || enteredAge.trim().length < 0) {\n      return;\n      console.log(enteredAge, enteredName);\n      setEnteredName('');\n      setEnteredAge('');\n    }\n  };\n\n  const inputChangedHandler = e => {\n    setEnteredName(e.target.value);\n  };\n\n  const ageChangedHandler = e => {\n    setEnteredAge(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.input,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addUserHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"UserName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"UserName\",\n        onChange: inputChangedHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"age\",\n        children: \"Age in years\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"Age\",\n        onChange: ageChangedHandler,\n        value: enteredAge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Add user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddUser, \"0Q5noyzjiCuuHCTlDzJ+1iyjJxI=\");\n\n_c = AddUser;\nexport default AddUser; // for two way binding , firstly simply update the values with a function i.e setemteredname , but here we \n// are not reflecting that value back , so use the value atr in input and set its value to the new updated variable\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["C:/Users/singh/Desktop/sid/REACT_MAX/starting-project/01-starting-project/src/components/Users/AddUser.js"],"names":["useState","Card","classes","Button","AddUser","props","enteredName","setEnteredName","enteredAge","setEnteredAge","addUserHandler","e","preventDefault","trim","length","console","log","inputChangedHandler","target","value","ageChangedHandler","input"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAEzB,QAAM,CAACC,WAAD,EAAeC,cAAf,IAAmCP,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAM,CAACQ,UAAD,EAAcC,aAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;;AACA,QAAMU,cAAc,GAAIC,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGN,WAAW,CAACO,IAAZ,GAAmBC,MAAnB,KAA4B,CAA5B,IAAiCN,UAAU,CAACK,IAAX,GAAkBC,MAAlB,GAA2B,CAA/D,EAAkE;AAChE;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ,EAAyBF,WAAzB;AACJC,MAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,MAAAA,aAAa,CAAC,EAAD,CAAb;AAEC;AAEF,GAVD;;AAYA,QAAMQ,mBAAmB,GAAGN,CAAC,IAAG;AAC9BJ,IAAAA,cAAc,CAACI,CAAC,CAACO,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAGT,CAAC,IAAG;AAC5BF,IAAAA,aAAa,CAACE,CAAC,CAACO,MAAF,CAASC,KAAV,CAAb;AACD,GAFD;;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAIjB,OAAO,CAACmB,KAA3B;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEX,cAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,UAAtB;AAAiC,QAAA,QAAQ,EAAIO,mBAA7C;AAAkE,QAAA,KAAK,EAAEX;AAAzE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,EAAE,EAAC,KAAxB;AAA8B,QAAA,QAAQ,EAAEc,iBAAxC;AAA2D,QAAA,KAAK,EAAEZ;AAAlE;AAAA;AAAA;AAAA;AAAA,cAJF,eAME,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CArCD;;GAAMJ,O;;KAAAA,O;AAsCN,eAAeA,OAAf,C,CAGA;AACA","sourcesContent":["import { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport classes from './AddUser.module.css'\r\nimport Button from '../UI/Button'\r\nconst AddUser = (props) => {\r\n\r\n  const [enteredName , setEnteredName ] =  useState('');\r\n  const [enteredAge , setEnteredAge ] = useState('');\r\n  const addUserHandler = (e) => {\r\n    e.preventDefault();\r\n    if(enteredName.trim().length===0 || enteredAge.trim().length < 0 ){\r\n      return \r\n        console.log(enteredAge , enteredName);\r\n    setEnteredName('');\r\n    setEnteredAge('');\r\n      \r\n    }\r\n    \r\n  };\r\n\r\n  const inputChangedHandler = e =>{\r\n    setEnteredName(e.target.value);\r\n  }\r\n  \r\n  const ageChangedHandler = e =>{\r\n    setEnteredAge(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <Card className = {classes.input}>\r\n      <form onSubmit={addUserHandler}>\r\n        <label htmlFor=\"username\">UserName</label>\r\n        <input type=\"text\" id=\"UserName\" onChange = {inputChangedHandler} value={enteredName}></input>\r\n        <label htmlFor=\"age\">Age in years</label>\r\n        <input type=\"number\" id=\"Age\" onChange={ageChangedHandler} value={enteredAge}></input>\r\n        {/* <button type=\"submit\"> Add User</button> */}\r\n        <Button type='submit'>Add user</Button>\r\n      </form>\r\n\r\n    </Card>\r\n  );\r\n};\r\nexport default AddUser;\r\n\r\n\r\n// for two way binding , firstly simply update the values with a function i.e setemteredname , but here we \r\n// are not reflecting that value back , so use the value atr in input and set its value to the new updated variable"]},"metadata":{},"sourceType":"module"}