{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singh\\\\Desktop\\\\sid\\\\REACT_MAX\\\\starting-project\\\\01-starting-project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AddUser from \"./components/Users/AddUser\";\nimport UserList from \"./components/Users/UserList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [usersList, setUsersList] = useState([]);\n\n  const addUserHandler = (uName, uAge) => {\n    // here when we require snapshot of the previous array \n    // then we simply use a function inside the useState fn\n    setUsersList(prevUsersList => {\n      return [...prevUsersList, {\n        name: uName,\n        age: uAge,\n        id: Math.random().toString()\n      }];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddUser, {\n      onAddUser: addUserHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: usersList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ETzzgkcNTkYNtL/3zkE3yox03yE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/singh/Desktop/sid/REACT_MAX/starting-project/01-starting-project/src/App.js"],"names":["React","useState","AddUser","UserList","App","usersList","setUsersList","addUserHandler","uName","uAge","prevUsersList","name","age","id","Math","random","toString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,QAAP,MAAqB,6BAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAaC,YAAb,IAA+BL,QAAQ,CAAC,EAAD,CAA7C;;AAEA,QAAMM,cAAc,GAAG,CAACC,KAAD,EAASC,IAAT,KAAkB;AACvC;AACA;AACAH,IAAAA,YAAY,CAAEI,aAAD,IAAiB;AAC3B,aAAO,CAAC,GAAGA,aAAJ,EAAoB;AAACC,QAAAA,IAAI,EAAGH,KAAR;AAAgBI,QAAAA,GAAG,EAAGH,IAAtB;AAA6BI,QAAAA,EAAE,EAAGC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAAlC,OAApB,CAAP;AACF,KAFW,CAAZ;AAGD,GAND;;AAOA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAIT;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEF;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAhBQD,G;;KAAAA,G;AAkBT,eAAeA,GAAf","sourcesContent":["import React , {useState} from \"react\";\nimport AddUser from \"./components/Users/AddUser\";\nimport UserList from \"./components/Users/UserList\";\n\nfunction App() {\n  const [usersList , setUsersList ] =  useState([]);\n\n  const addUserHandler = (uName , uAge) => {\n    // here when we require snapshot of the previous array \n    // then we simply use a function inside the useState fn\n    setUsersList((prevUsersList)=>{\n       return [...prevUsersList , {name : uName , age : uAge , id : Math.random().toString()}]\n    });\n  }\n  return (\n    <div>\n      <AddUser onAddUser = {addUserHandler}/>\n      <UserList users={usersList} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}